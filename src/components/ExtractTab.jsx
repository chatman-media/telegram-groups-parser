import React, { useState } from 'react'

function ExtractTab({ logs, setLogs }) {
  const [isRunning, setIsRunning] = useState(false)
  const [options, setOptions] = useState({
    withUsernames: false,
    noFilter: false
  })

  const startExtraction = async () => {
    if (isRunning) return
    
    setIsRunning(true)
    setLogs('')
    
    try {
      const response = await fetch('http://localhost:3001/api/extract', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(options)
      })
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`)
      }
      
      const result = await response.json()
      setLogs(prev => prev + `‚úÖ ${result.message}\n`)
      
      if (result.stats) {
        setLogs(prev => prev + `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n`)
        setLogs(prev => prev + `   –í—Å–µ–≥–æ –≥—Ä—É–ø–ø: ${result.stats.total}\n`)
        setLogs(prev => prev + `   –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: ${result.stats.filtered}\n`)
        setLogs(prev => prev + `   –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ID: ${result.stats.saved}\n`)
      }
    } catch (error) {
      console.error('Extract error:', error)
      setLogs(prev => prev + `‚ùå –û—à–∏–±–∫–∞: ${error.message}\n`)
    } finally {
      setIsRunning(false)
    }
  }

  return (
    <div>
      <h2>üìã –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –≥—Ä—É–ø–ø</h2>
      <p>–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –≥—Ä—É–ø–ø –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π</p>

      <div className="form-group">
        <label>
          <input
            type="checkbox"
            checked={options.withUsernames}
            onChange={(e) => setOptions(prev => ({
              ...prev,
              withUsernames: e.target.checked
            }))}
            disabled={isRunning}
            style={{ marginRight: '8px' }}
          />
          –í–∫–ª—é—á–∏—Ç—å @username –ø–æ—Å–ª–µ ID
        </label>
      </div>

      <div className="form-group">
        <label>
          <input
            type="checkbox"
            checked={options.noFilter}
            onChange={(e) => setOptions(prev => ({
              ...prev,
              noFilter: e.target.checked
            }))}
            disabled={isRunning}
            style={{ marginRight: '8px' }}
          />
          –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        </label>
      </div>

      <div style={{ marginBottom: '20px' }}>
        <button
          className="button"
          onClick={startExtraction}
          disabled={isRunning}
        >
          {isRunning ? '‚è≥ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ...' : 'üìã –ò–∑–≤–ª–µ—á—å ID'}
        </button>
      </div>

      {isRunning && (
        <div className="status running">
          ‚è≥ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...
        </div>
      )}

      <div className="file-info">
        <h4>üìÅ –§–∞–π–ª—ã:</h4>
        <p><strong>–í—Ö–æ–¥–Ω–æ–π:</strong> groups.json - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞</p>
        <p><strong>–í—ã—Ö–æ–¥–Ω–æ–π:</strong> group_ids.txt - —Å–ø–∏—Å–æ–∫ ID –≥—Ä—É–ø–ø</p>
        <p><strong>–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è:</strong> –ü–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ config.json</p>
      </div>

      <div className="file-info">
        <h4>‚öôÔ∏è –û–ø—Ü–∏–∏:</h4>
        <p><strong>–° username:</strong> –§–æ—Ä–º–∞—Ç "ID @username" –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ "ID"</p>
        <p><strong>–ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:</strong> –ò–∑–≤–ª–µ—á—å –≤—Å–µ ID –±–µ–∑ —É—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
      </div>

      {logs && (
        <div className="log-container">
          {logs}
        </div>
      )}
    </div>
  )
}

export default ExtractTab